{"otherData": {},"traceEvents":[{},{"cat":"function","dur":645104,"name":"SDLInit","ph":"X","pid":0,"tid":24220,"ts":607285290919},{"cat":"function","dur":92910,"name":"glfwCreateWindow","ph":"X","pid":0,"tid":24220,"ts":607286107089},{"cat":"function","dur":4485,"name":"__cdecl Labyrinth::OpenGLContext::OpenGLContext(struct SDL_Window *)","ph":"X","pid":0,"tid":24220,"ts":607286200134},{"cat":"function","dur":2499,"name":"void __cdecl Labyrinth::OpenGLContext::init(void)","ph":"X","pid":0,"tid":24220,"ts":607286204770},{"cat":"function","dur":15,"name":"void __cdecl Labyrinth::WindowsWindow::setVSync(bool)","ph":"X","pid":0,"tid":24220,"ts":607286207337},{"cat":"function","dur":920124,"name":"void __cdecl Labyrinth::WindowsWindow::init(const struct Labyrinth::WindowProps &)","ph":"X","pid":0,"tid":24220,"ts":607285287272},{"cat":"function","dur":920195,"name":"__cdecl Labyrinth::WindowsWindow::WindowsWindow(const struct Labyrinth::WindowProps &)","ph":"X","pid":0,"tid":24220,"ts":607285287269},{"cat":"function","dur":20,"name":"void __cdecl Labyrinth::OpenGLRendererAPI::init(void)","ph":"X","pid":0,"tid":24220,"ts":607286207534},{"cat":"function","dur":2,"name":"__cdecl Labyrinth::OpenGLVertexArray::OpenGLVertexArray(void)","ph":"X","pid":0,"tid":24220,"ts":607286207629},{"cat":"function","dur":30,"name":"__cdecl Labyrinth::OpenGLVertexBuffer::OpenGLVertexBuffer(unsigned int)","ph":"X","pid":0,"tid":24220,"ts":607286207711},{"cat":"function","dur":1,"name":"void __cdecl Labyrinth::OpenGLVertexBuffer::bind(void) const","ph":"X","pid":0,"tid":24220,"ts":607286207839},{"cat":"function","dur":62,"name":"void __cdecl Labyrinth::OpenGLVertexArray::addVertexBuffer(const class std::shared_ptr<class Labyrinth::VertexBuffer> &)","ph":"X","pid":0,"tid":24220,"ts":607286207832},{"cat":"function","dur":451,"name":"__cdecl Labyrinth::OpenGLIndexBuffer::OpenGLIndexBuffer(unsigned int *,unsigned int)","ph":"X","pid":0,"tid":24220,"ts":607286208294},{"cat":"function","dur":1,"name":"void __cdecl Labyrinth::OpenGLIndexBuffer::bind(void) const","ph":"X","pid":0,"tid":24220,"ts":607286208813},{"cat":"function","dur":54,"name":"void __cdecl Labyrinth::OpenGLVertexArray::setIndexBuffer(const class std::shared_ptr<class Labyrinth::IndexBuffer> &)","ph":"X","pid":0,"tid":24220,"ts":607286208804},{"cat":"function","dur":238,"name":"__cdecl Labyrinth::OpenGLTexture2D::OpenGLTexture2D(unsigned int,unsigned int)","ph":"X","pid":0,"tid":24220,"ts":607286208904},{"cat":"function","dur":40,"name":"void __cdecl Labyrinth::OpenGLTexture2D::setData(void *,unsigned int)","ph":"X","pid":0,"tid":24220,"ts":607286209218},{"cat":"function","dur":340,"name":"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl Labyrinth::OpenGLShader::ReadFile(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)","ph":"X","pid":0,"tid":24220,"ts":607286209388},{"cat":"function","dur":30,"name":"class std::unordered_map<unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned int>,struct std::equal_to<unsigned int>,class std::allocator<struct std::pair<unsigned int const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl Labyrinth::OpenGLShader::PreProcess(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":24220,"ts":607286209785},{"cat":"function","dur":341,"name":"void __cdecl Labyrinth::OpenGLShader::Compile(const class std::unordered_map<unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned int>,struct std::equal_to<unsigned int>,class std::allocator<struct std::pair<unsigned int const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > &)","ph":"X","pid":0,"tid":24220,"ts":607286209867},{"cat":"function","dur":887,"name":"__cdecl Labyrinth::OpenGLShader::OpenGLShader(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":24220,"ts":607286209381},{"cat":"function","dur":9,"name":"void __cdecl Labyrinth::OpenGLShader::bind(void) const","ph":"X","pid":0,"tid":24220,"ts":607286210367},{"cat":"function","dur":11,"name":"void __cdecl Labyrinth::OpenGLShader::setIntArray(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,int *,unsigned int)","ph":"X","pid":0,"tid":24220,"ts":607286210467},{"cat":"function","dur":2920,"name":"void __cdecl Labyrinth::Renderer2D::Init(void)","ph":"X","pid":0,"tid":24220,"ts":607286207605},{"cat":"function","dur":3033,"name":"void __cdecl Labyrinth::Renderer::Init(void)","ph":"X","pid":0,"tid":24220,"ts":607286207534},{"cat":"function","dur":338,"name":"void __cdecl Labyrinth::ImGuiLayer::onAttach(void)","ph":"X","pid":0,"tid":24220,"ts":607286210645},{"cat":"function","dur":410,"name":"void __cdecl Labyrinth::Application::pushOverlay(class Labyrinth::Layer *)","ph":"X","pid":0,"tid":24220,"ts":607286210627},{"cat":"function","dur":923832,"name":"__cdecl Labyrinth::Application::Application(void)","ph":"X","pid":0,"tid":24220,"ts":607285287245},{"cat":"function","dur":9,"name":"__cdecl Labyrinth::OrthographicCamera::OrthographicCamera(float,float,float,float,float)","ph":"X","pid":0,"tid":24220,"ts":607286211126},{"cat":"function","dur":402,"name":"stbi_load - OpenGLTexture2D::OpenGLTexture2D(const std:string&)","ph":"X","pid":0,"tid":24220,"ts":607286211192},{"cat":"function","dur":684,"name":"__cdecl Labyrinth::OpenGLTexture2D::OpenGLTexture2D(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":24220,"ts":607286211191},{"cat":"function","dur":751,"name":"void __cdecl Sandbox2D::onAttach(void)","ph":"X","pid":0,"tid":24220,"ts":607286211184},{"cat":"function","dur":794,"name":"void __cdecl Labyrinth::Application::pushLayer(class Labyrinth::Layer *)","ph":"X","pid":0,"tid":24220,"ts":607286211180}]}